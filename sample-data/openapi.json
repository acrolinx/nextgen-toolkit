{
  "openapi": "3.1.0",
  "info": {
    "title": "Acrolinx NextGen API",
    "description": "API interface for Acrolinx NextGen content processing workflows.",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/rewrites/": {
      "post": {
        "tags": ["Demo Tool"],
        "summary": "Submit a document for editing",
        "description": "Uploads a .txt file and starts the Helios One editing workflow.",
        "operationId": "Demo Tool-submit_edit_workflow",
        "requestBody": {
          "content": {
            "multipart/form-data": { "schema": { "$ref": "#/components/schemas/Body_Demo_Tool-submit_edit_workflow" } }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartEditResponse" } } }
          },
          "400": {
            "description": "Invalid input parameters or file",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Invalid API Key",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "500": {
            "description": "Internal server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/rewrites/{workflow_id}": {
      "get": {
        "tags": ["Demo Tool"],
        "summary": "Get the status of an edit workflow",
        "description": "Returns the current status of a Helios One editing workflow.",
        "operationId": "Demo Tool-get_edit_status",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The workflow ID to get the status for.",
              "title": "Workflow Id"
            },
            "description": "The workflow ID to get the status for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EditStatusResponse" } } }
          },
          "403": {
            "description": "Invalid API Key",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "404": {
            "description": "Workflow not found",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "500": {
            "description": "Internal server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/checks/": {
      "post": {
        "tags": ["Demo Tool"],
        "summary": "Submit a document for checking",
        "description": "Uploads a document (PDF) and starts the Helios One editing workflow.",
        "operationId": "Demo Tool-submit_check_workflow",
        "requestBody": {
          "content": {
            "multipart/form-data": { "schema": { "$ref": "#/components/schemas/Body_Demo_Tool-submit_check_workflow" } }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/StartCheckResponse" } } }
          },
          "400": {
            "description": "Invalid input parameters or file",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "403": {
            "description": "Invalid API Key",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "500": {
            "description": "Internal server error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/style-guides": {
      "get": {
        "tags": ["Style Guides"],
        "summary": "Get Style Guides",
        "description": "Get all style guides. Keys are style guide IDs and values are style guide names.",
        "operationId": "Style Guides-get_style_guides",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": { "$ref": "#/components/schemas/StyleGuides" },
                  "type": "object",
                  "title": "Response Style Guides-Get Style Guides"
                }
              }
            }
          },
          "202": {
            "description": "Style guides",
            "content": {
              "application/json": {
                "example": {
                  "01971e03-dd27-75ee-9044-b48e654848cf": "ap",
                  "01971e03-dd27-77d8-a6fa-5edb6a1f4ad2": "chicago",
                  "01971e03-dd27-779f-b3ec-b724a2cf809f": "microsoft",
                  "019755eb-b98f-79b0-84b2-5f09118083f1": "proofpoint"
                }
              }
            }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      },
      "post": {
        "tags": ["Style Guides"],
        "summary": "Create Style Guide",
        "operationId": "Style Guides-create_style_guide",
        "requestBody": {
          "content": { "multipart/form-data": { "schema": { "$ref": "#/components/schemas/StyleGuideRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/style-guides/{style_guide_id}": {
      "get": {
        "tags": ["Style Guides"],
        "summary": "Get Style Guide",
        "operationId": "Style Guides-get_style_guide",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "style_guide_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Style Guide Id" }
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "put": {
        "tags": ["Style Guides"],
        "summary": "Update Style Guide",
        "operationId": "Style Guides-update_style_guide",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "style_guide_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Style Guide Id" }
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      },
      "delete": {
        "tags": ["Style Guides"],
        "summary": "Delete Style Guide",
        "operationId": "Style Guides-delete_style_guide",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "style_guide_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Style Guide Id" }
          }
        ],
        "responses": {
          "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/style/checks": {
      "post": {
        "tags": ["Style Checks"],
        "summary": "Create Style Check",
        "description": "Start a style and brand check run. Returns a workflow ID for each file.",
        "operationId": "Style Checks-create_style_check",
        "requestBody": {
          "content": { "multipart/form-data": { "schema": { "$ref": "#/components/schemas/StyleRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WorkflowResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/style/checks/{workflow_id}": {
      "get": {
        "tags": ["Style Checks"],
        "summary": "Get Style Check",
        "description": "get the results of a style and brand check run.",
        "operationId": "Style Checks-get_style_check",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Workflow Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/StyleCheckResponse" },
                    { "$ref": "#/components/schemas/WorkflowStatusResponse" }
                  ],
                  "title": "Response Style Checks-Get Style Check"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/style/suggestions": {
      "post": {
        "tags": ["Style Suggestions"],
        "summary": "Create Style Suggestion",
        "description": "Start a style and brand suggestion run. Returns a workflow ID for each file.",
        "operationId": "Style Suggestions-create_style_suggestion",
        "requestBody": {
          "content": { "multipart/form-data": { "schema": { "$ref": "#/components/schemas/StyleRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WorkflowResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/style/suggestions/{workflow_id}": {
      "get": {
        "tags": ["Style Suggestions"],
        "summary": "Get Style Suggestion",
        "description": "Get the results of a suggestion run.",
        "operationId": "Style Suggestions-get_style_suggestion",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Workflow Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/SuggestionResponse" },
                    { "$ref": "#/components/schemas/WorkflowStatusResponse" }
                  ],
                  "title": "Response Style Suggestions-Get Style Suggestion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/v1/style/rewrites": {
      "post": {
        "tags": ["Style Rewrites"],
        "summary": "Create Style Rewrite",
        "description": "Start a rewrite run for one or many files. Returns a workflow ID for each file.",
        "operationId": "Style Rewrites-create_style_rewrite",
        "requestBody": {
          "content": { "multipart/form-data": { "schema": { "$ref": "#/components/schemas/StyleRequestBody" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/WorkflowResponse" } } }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/v1/style/rewrites/{workflow_id}": {
      "get": {
        "tags": ["Style Rewrites"],
        "summary": "Get Style Rewrite",
        "description": "Get the results of a rewrite run.",
        "operationId": "Style Rewrites-get_style_rewrite",
        "security": [{ "APIKeyHeader": [] }],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Workflow Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/RewriteResponse" },
                    { "$ref": "#/components/schemas/WorkflowStatusResponse" }
                  ],
                  "title": "Response Style Rewrites-Get Style Rewrite"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        }
      }
    },
    "/internal/v1/constants": {
      "get": {
        "tags": ["Internal"],
        "summary": "Get Admin Constants",
        "operationId": "Internal-get_admin_constants",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ConstantsResponse" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    },
    "/internal/v1/demo-feedback": {
      "post": {
        "tags": ["Internal"],
        "summary": "Submit Feedback",
        "operationId": "Internal-submit_feedback",
        "requestBody": {
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FeedbackRequest" } } },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } }
          }
        },
        "security": [{ "APIKeyHeader": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "AcrolinxScorerActivityOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "issues": {
            "items": { "$ref": "#/components/schemas/helios_one__activities__acrolinx_scorer__models__Issue" },
            "type": "array",
            "title": "Issues"
          },
          "score": { "type": "number", "title": "Score", "default": -1 }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id"],
        "title": "AcrolinxScorerActivityOutput"
      },
      "Analysis": {
        "properties": {
          "avg_sentence_length": { "type": "number", "title": "Avg Sentence Length", "default": -1 },
          "avg_word_length": { "type": "number", "title": "Avg Word Length", "default": -1 },
          "complexity_score": { "type": "number", "title": "Complexity Score", "default": -1 },
          "readability_score": { "type": "number", "title": "Readability Score", "default": -1 },
          "sentence_count": { "type": "integer", "title": "Sentence Count", "default": -1 },
          "vocabulary_score": { "type": "number", "title": "Vocabulary Score", "default": -1 },
          "word_count": { "type": "integer", "title": "Word Count", "default": -1 }
        },
        "type": "object",
        "title": "Analysis"
      },
      "Body_Demo_Tool-submit_check_workflow": {
        "properties": {
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to check.",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to check.",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          },
          "style_guide": {
            "$ref": "#/components/schemas/StyleGuides",
            "description": "The intended style guide to use for the text to check.",
            "examples": ["ap", "chicago", "microsoft", "proofpoint"]
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The .txt file to process.",
            "content_type": "text/plain"
          }
        },
        "type": "object",
        "required": ["dialect", "tone", "style_guide", "file"],
        "title": "Body_Demo Tool-submit_check_workflow"
      },
      "Body_Demo_Tool-submit_edit_workflow": {
        "properties": {
          "file": {
            "anyOf": [{ "type": "string", "format": "binary" }, { "type": "null" }],
            "title": "File",
            "description": "The .txt file to process.",
            "content_type": "text/plain"
          },
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to edit.",
            "default": "american_english",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to edit.",
            "default": "formal",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          },
          "style_guide": {
            "$ref": "#/components/schemas/StyleGuides",
            "description": "The intended style guide to use for the text to edit.",
            "default": "microsoft",
            "examples": ["ap", "chicago", "microsoft", "proofpoint"]
          },
          "include_classic_score": {
            "type": "boolean",
            "title": "Include Classic Score",
            "description": "Whether to score the text.",
            "default": false,
            "examples": [true, false]
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL to scrape.",
            "default": "",
            "examples": ["https://example.com"]
          }
        },
        "type": "object",
        "title": "Body_Demo Tool-submit_edit_workflow"
      },
      "Color": {
        "properties": {
          "value": { "type": "string", "title": "Value" },
          "min_score": { "type": "integer", "title": "Min Score" }
        },
        "type": "object",
        "required": ["value", "min_score"],
        "title": "Color"
      },
      "ConstantsResponse": {
        "properties": {
          "dialects": {
            "items": { "$ref": "#/components/schemas/Dialects" },
            "type": "array",
            "title": "Dialects",
            "default": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tones": {
            "items": { "$ref": "#/components/schemas/Tones" },
            "type": "array",
            "title": "Tones",
            "default": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          },
          "style_guides": {
            "additionalProperties": { "type": "string" },
            "type": "object",
            "title": "Style Guides",
            "default": {
              "01971e03-dd27-75ee-9044-b48e654848cf": "ap",
              "01971e03-dd27-77d8-a6fa-5edb6a1f4ad2": "chicago",
              "01971e03-dd27-779f-b3ec-b724a2cf809f": "microsoft",
              "019755eb-b98f-79b0-84b2-5f09118083f1": "proofpoint"
            }
          },
          "colors": {
            "additionalProperties": { "$ref": "#/components/schemas/Color" },
            "type": "object",
            "title": "Colors",
            "default": {
              "green": { "min_score": 80, "value": "rgb(120, 253, 134)" },
              "yellow": { "min_score": 60, "value": "rgb(246, 240, 104)" },
              "red": { "min_score": 0, "value": "rgb(235, 94, 94)" }
            }
          }
        },
        "type": "object",
        "title": "ConstantsResponse"
      },
      "ContentQualityFeedback": {
        "type": "string",
        "enum": [
          "Excellent content quality! Your text is clear, readable, and well-structured.",
          "Good content quality. Your text is readable but has room for improvement.",
          "Moderate content quality. Consider revising for better readability.",
          "Low content quality. The text needs significant revision for better readability."
        ],
        "title": "ContentQualityFeedback"
      },
      "ContentScorerActivityOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "analysis": { "anyOf": [{ "$ref": "#/components/schemas/Analysis" }, { "type": "null" }] },
          "feedback": { "anyOf": [{ "$ref": "#/components/schemas/ContentQualityFeedback" }, { "type": "null" }] },
          "score": { "type": "number", "title": "Score", "default": -1 },
          "suggestions": {
            "anyOf": [
              { "items": { "$ref": "#/components/schemas/ContentSuggestions" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Suggestions"
          },
          "target_score": { "anyOf": [{ "$ref": "#/components/schemas/TargetScore" }, { "type": "null" }] }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id"],
        "title": "ContentScorerActivityOutput"
      },
      "ContentSuggestions": {
        "type": "string",
        "enum": [
          "Use shorter sentences and simpler words to improve readability.",
          "Your text may be too complex. Consider simplifying vocabulary and sentence structure.",
          "Your sentences are quite long. Consider breaking them into shorter ones.",
          "Your sentences are very short. Consider combining some for better flow.",
          "Your vocabulary diversity is low. Try using a wider range of words.",
          "Your text is well-balanced. Consider proofreading for minor improvements."
        ],
        "title": "ContentSuggestions"
      },
      "Dialects": {
        "type": "string",
        "enum": ["american_english", "australian_english", "british_oxford", "canadian_english", "indian_english"],
        "title": "Dialects"
      },
      "EditStatusResponse": {
        "properties": {
          "workflow_id": { "type": "string", "title": "Workflow Id" },
          "status": { "$ref": "#/components/schemas/WorkflowStatus" },
          "run_id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Run Id" },
          "result": { "anyOf": [{ "$ref": "#/components/schemas/TheiaOutput" }, { "type": "null" }] },
          "error_message": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error Message" }
        },
        "type": "object",
        "required": ["workflow_id", "status"],
        "title": "EditStatusResponse"
      },
      "ErrorResponse": {
        "properties": { "detail": { "type": "string", "title": "Detail" } },
        "type": "object",
        "required": ["detail"],
        "title": "ErrorResponse",
        "description": "Standard error response model."
      },
      "FeedbackRequest": {
        "properties": {
          "workflow_id": { "type": "string", "title": "Workflow Id" },
          "run_id": { "type": "string", "title": "Run Id" },
          "helpful": { "type": "boolean", "title": "Helpful" },
          "feedback": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Feedback" },
          "original": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Original" },
          "suggestion": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Suggestion" },
          "category": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Category" }
        },
        "type": "object",
        "required": ["workflow_id", "run_id", "helpful"],
        "title": "FeedbackRequest"
      },
      "FinalScores": {
        "properties": {
          "acrolinx_score": {
            "anyOf": [{ "$ref": "#/components/schemas/AcrolinxScorerActivityOutput" }, { "type": "null" }]
          },
          "content_score": {
            "anyOf": [{ "$ref": "#/components/schemas/ContentScorerActivityOutput" }, { "type": "null" }]
          }
        },
        "type": "object",
        "title": "FinalScores"
      },
      "GrammarActivityOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "changes": { "items": { "$ref": "#/components/schemas/GrammarChange" }, "type": "array", "title": "Changes" }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "changes"],
        "title": "GrammarActivityOutput"
      },
      "GrammarCategory": {
        "type": "string",
        "enum": ["sva_pronoun", "punct_cap", "spelling", "syntax", "verbs", "word_usage", "other"],
        "title": "GrammarCategory"
      },
      "GrammarChange": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "modified": { "type": "string", "title": "Modified", "description": "The modified text" },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": { "$ref": "#/components/schemas/GrammarCategory" }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "GrammarChange"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": { "items": { "$ref": "#/components/schemas/ValidationError" }, "type": "array", "title": "Detail" }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HeliosOneWorkflowOutput": {
        "properties": {
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "The date and time the workflow was created"
          },
          "errors": {
            "items": { "$ref": "#/components/schemas/WorkflowError" },
            "type": "array",
            "title": "Errors",
            "description": "The errors that occurred during the workflow"
          },
          "initial_scores": {
            "$ref": "#/components/schemas/InitialScores",
            "description": "The initial scores of the workflow"
          },
          "final_scores": {
            "$ref": "#/components/schemas/FinalScores",
            "description": "The final scores of the workflow"
          },
          "input_file": { "type": "string", "title": "Input File", "description": "The path to the input file" },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the workflow"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "grammar_result": {
            "anyOf": [{ "$ref": "#/components/schemas/GrammarActivityOutput" }, { "type": "null" }],
            "description": "The result of the grammar activity"
          },
          "merging_result": {
            "anyOf": [{ "$ref": "#/components/schemas/MergingActivityOutput" }, { "type": "null" }],
            "description": "The result of the merging activity"
          },
          "parser_result": {
            "anyOf": [{ "$ref": "#/components/schemas/ParserResponse" }, { "type": "null" }],
            "description": "The result of the parser activity"
          },
          "sentence_length_result": {
            "anyOf": [{ "$ref": "#/components/schemas/SentenceLengthActivityOutput" }, { "type": "null" }],
            "description": "The result of the sentence length activity"
          },
          "sentence_structure_result": {
            "anyOf": [{ "$ref": "#/components/schemas/SentenceStructureOutput" }, { "type": "null" }],
            "description": "The result of the sentence structure activity"
          },
          "simple_vocabulary_result": {
            "anyOf": [{ "$ref": "#/components/schemas/SimpleVocabOutput" }, { "type": "null" }],
            "description": "The result of the simple vocabulary activity"
          },
          "tone_result": {
            "anyOf": [{ "$ref": "#/components/schemas/ToneCheckOutput" }, { "type": "null" }],
            "description": "The result of the tone activity"
          },
          "style_guide_result": {
            "anyOf": [{ "$ref": "#/components/schemas/StyleGuideOutput" }, { "type": "null" }],
            "description": "The result of the style guide activity"
          }
        },
        "type": "object",
        "required": ["created_at", "input_file", "run_id", "workflow_id"],
        "title": "HeliosOneWorkflowOutput"
      },
      "InitialScores": {
        "properties": {
          "acrolinx_score": {
            "anyOf": [{ "$ref": "#/components/schemas/AcrolinxScorerActivityOutput" }, { "type": "null" }]
          },
          "content_score": {
            "anyOf": [{ "$ref": "#/components/schemas/ContentScorerActivityOutput" }, { "type": "null" }]
          }
        },
        "type": "object",
        "title": "InitialScores"
      },
      "IssueCategory": {
        "type": "string",
        "enum": ["grammar", "simple_vocab", "sentence_structure", "sentence_length", "tone", "style_guide"],
        "title": "IssueCategory"
      },
      "MergingActivityOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "merged_text": {
            "type": "string",
            "minLength": 1,
            "title": "Merged Text",
            "description": "Text after applying all changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "merged_text"],
        "title": "MergingActivityOutput"
      },
      "Options": {
        "properties": {
          "style_guide": { "anyOf": [{ "$ref": "#/components/schemas/StyleGuide" }, { "type": "null" }] },
          "dialect": { "anyOf": [{ "$ref": "#/components/schemas/Dialects" }, { "type": "null" }] },
          "tone": { "anyOf": [{ "$ref": "#/components/schemas/Tones" }, { "type": "null" }] }
        },
        "type": "object",
        "title": "Options"
      },
      "Parameters": {
        "properties": {
          "dialect": {
            "anyOf": [{ "$ref": "#/components/schemas/Dialects" }, { "type": "null" }],
            "description": "The dialect used for the activity"
          },
          "tone": {
            "anyOf": [{ "$ref": "#/components/schemas/Tones" }, { "type": "null" }],
            "description": "The tone used for the activity"
          },
          "style_guide": {
            "anyOf": [{ "$ref": "#/components/schemas/StyleGuides" }, { "type": "null" }],
            "description": "The style guide used for the activity"
          },
          "max_words": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Max Words",
            "description": "The maximum number of words allowed for the activity"
          }
        },
        "type": "object",
        "title": "Parameters"
      },
      "ParserResponse": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "extracted_text": {
            "type": "string",
            "minLength": 1,
            "title": "Extracted Text",
            "description": "The extracted text from the file."
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "extracted_text"],
        "title": "ParserResponse"
      },
      "RewriteResponse": {
        "properties": {
          "status": { "$ref": "#/components/schemas/WorkflowStatus" },
          "scores": { "anyOf": [{ "$ref": "#/components/schemas/ScoreOutput" }, { "type": "null" }] },
          "issues": { "items": { "$ref": "#/components/schemas/Suggestion" }, "type": "array", "title": "Issues" },
          "check_options": { "$ref": "#/components/schemas/Options" },
          "rewrite": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Rewrite" }
        },
        "type": "object",
        "required": ["status", "scores", "issues", "check_options"],
        "title": "RewriteResponse"
      },
      "ScoreOutput": {
        "properties": {
          "avg_sentence_length": { "type": "number", "title": "Avg Sentence Length", "default": -1 },
          "avg_word_length": { "type": "number", "title": "Avg Word Length", "default": -1 },
          "complexity_score": { "type": "number", "title": "Complexity Score", "default": -1 },
          "readability_score": { "type": "number", "title": "Readability Score", "default": -1 },
          "sentence_count": { "type": "integer", "title": "Sentence Count", "default": -1 },
          "vocabulary_score": { "type": "number", "title": "Vocabulary Score", "default": -1 },
          "word_count": { "type": "integer", "title": "Word Count", "default": -1 },
          "overall_score": { "type": "number", "title": "Overall Score", "default": -1 }
        },
        "type": "object",
        "title": "ScoreOutput"
      },
      "SentenceLengthActivityOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error" },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id" },
          "workflow_id": { "type": "string", "title": "Workflow Id" },
          "text": { "type": "string", "title": "Text" },
          "changes": {
            "items": { "$ref": "#/components/schemas/SentenceLengthChange" },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "SentenceLengthActivityOutput"
      },
      "SentenceLengthCategory": {
        "type": "string",
        "enum": ["capitalization", "remove", "extract", "shorten", "deletion", "replace", "other"],
        "title": "SentenceLengthCategory"
      },
      "SentenceLengthChange": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "modified": { "type": "string", "title": "Modified", "description": "The modified text" },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": { "$ref": "#/components/schemas/SentenceLengthCategory" }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "SentenceLengthChange"
      },
      "SentenceStructureCategory": {
        "type": "string",
        "enum": [
          "complex_verbs",
          "hidden_verbs",
          "insertion",
          "modal_verbs",
          "passive",
          "phrasal_verbs",
          "subjunctive",
          "other"
        ],
        "title": "SentenceStructureCategory"
      },
      "SentenceStructureChange": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "modified": { "type": "string", "title": "Modified", "description": "The modified text" },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": { "$ref": "#/components/schemas/SentenceStructureCategory" }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "SentenceStructureChange"
      },
      "SentenceStructureOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error" },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id" },
          "workflow_id": { "type": "string", "title": "Workflow Id" },
          "text": { "type": "string", "title": "Text" },
          "changes": {
            "items": { "$ref": "#/components/schemas/SentenceStructureChange" },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "SentenceStructureOutput"
      },
      "SimpleVocabCategory": { "type": "string", "enum": ["vocabulary", "other"], "title": "SimpleVocabCategory" },
      "SimpleVocabChange": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "modified": { "type": "string", "title": "Modified", "description": "The modified text" },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": { "$ref": "#/components/schemas/SimpleVocabCategory" }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "SimpleVocabChange"
      },
      "SimpleVocabOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error" },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id" },
          "workflow_id": { "type": "string", "title": "Workflow Id" },
          "text": { "type": "string", "title": "Text" },
          "changes": {
            "items": { "$ref": "#/components/schemas/SimpleVocabChange" },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "SimpleVocabOutput"
      },
      "StartCheckResponse": {
        "properties": {
          "message": { "type": "string", "title": "Message", "default": "Check workflow started successfully." },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "examples": ["helios-workflow-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"]
          }
        },
        "type": "object",
        "required": ["workflow_id"],
        "title": "StartCheckResponse",
        "description": "Response after successfully starting a check workflow."
      },
      "StartEditResponse": {
        "properties": {
          "message": { "type": "string", "title": "Message", "default": "Rewrite workflow started successfully." },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "examples": ["helios-workflow-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"]
          }
        },
        "type": "object",
        "required": ["workflow_id"],
        "title": "StartEditResponse",
        "description": "Response after successfully starting a rewrite workflow."
      },
      "StyleCheckResponse": {
        "properties": {
          "status": { "$ref": "#/components/schemas/WorkflowStatus" },
          "scores": { "anyOf": [{ "$ref": "#/components/schemas/ScoreOutput" }, { "type": "null" }] },
          "issues": {
            "items": { "$ref": "#/components/schemas/helios_one__api__schemas__v1__style__checks__Issue" },
            "type": "array",
            "title": "Issues"
          },
          "check_options": { "$ref": "#/components/schemas/Options" }
        },
        "type": "object",
        "required": ["status", "scores", "issues", "check_options"],
        "title": "StyleCheckResponse"
      },
      "StyleGuide": {
        "properties": {
          "id": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Id" },
          "name": { "anyOf": [{ "$ref": "#/components/schemas/StyleGuides" }, { "type": "null" }] }
        },
        "type": "object",
        "title": "StyleGuide"
      },
      "StyleGuideCategory": {
        "type": "string",
        "enum": [
          "punctuation",
          "capitalization",
          "grammar_and_usage",
          "numbers_and_dates",
          "formatting_and_structure",
          "other"
        ],
        "title": "StyleGuideCategory"
      },
      "StyleGuideChange": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "modified": { "type": "string", "title": "Modified", "description": "The modified text" },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": { "$ref": "#/components/schemas/StyleGuideCategory" }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "StyleGuideChange"
      },
      "StyleGuideOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "changes": {
            "items": { "$ref": "#/components/schemas/StyleGuideChange" },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "changes"],
        "title": "StyleGuideOutput"
      },
      "StyleGuideRequestBody": {
        "properties": {
          "file_upload": {
            "type": "string",
            "format": "binary",
            "title": "File Upload",
            "description": "The file to process."
          }
        },
        "type": "object",
        "required": ["file_upload"],
        "title": "StyleGuideRequestBody"
      },
      "StyleGuides": { "type": "string", "enum": ["ap", "chicago", "microsoft", "proofpoint"], "title": "StyleGuides" },
      "StyleRequestBody": {
        "properties": {
          "file_upload": {
            "type": "string",
            "format": "binary",
            "title": "File Upload",
            "description": "The file to process."
          },
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to edit.",
            "default": "american_english",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to edit.",
            "default": "formal",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          },
          "style_guide": {
            "type": "string",
            "title": "Style Guide",
            "description": "The style guide to use for the text to edit. Can be a style guide ID or the name of a generic style guide, e.g. 'ap', 'chicago', or 'microsoft'.",
            "default": "microsoft",
            "examples": [
              "01971e03-dd27-75ee-9044-b48e654848cf",
              "01971e03-dd27-77d8-a6fa-5edb6a1f4ad2",
              "01971e03-dd27-779f-b3ec-b724a2cf809f",
              "019755eb-b98f-79b0-84b2-5f09118083f1"
            ]
          }
        },
        "type": "object",
        "required": ["file_upload"],
        "title": "StyleRequestBody"
      },
      "Suggestion": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "char_index": { "type": "integer", "title": "Char Index", "description": "The start index of the change" },
          "subcategory": {
            "anyOf": [
              { "$ref": "#/components/schemas/GrammarCategory" },
              { "$ref": "#/components/schemas/SimpleVocabCategory" },
              { "$ref": "#/components/schemas/SentenceStructureCategory" },
              { "$ref": "#/components/schemas/SentenceLengthCategory" },
              { "$ref": "#/components/schemas/ToneCategory" },
              { "$ref": "#/components/schemas/StyleGuideCategory" }
            ],
            "title": "Subcategory",
            "description": "The sub-category of the change"
          },
          "suggestion": { "type": "string", "title": "Suggestion" },
          "category": {
            "anyOf": [{ "$ref": "#/components/schemas/IssueCategory" }, { "type": "null" }],
            "readOnly": true
          }
        },
        "type": "object",
        "required": ["original", "char_index", "subcategory", "suggestion", "category"],
        "title": "Suggestion"
      },
      "SuggestionResponse": {
        "properties": {
          "status": { "$ref": "#/components/schemas/WorkflowStatus" },
          "scores": { "anyOf": [{ "$ref": "#/components/schemas/ScoreOutput" }, { "type": "null" }] },
          "issues": { "items": { "$ref": "#/components/schemas/Suggestion" }, "type": "array", "title": "Issues" },
          "check_options": { "$ref": "#/components/schemas/Options" }
        },
        "type": "object",
        "required": ["status", "scores", "issues", "check_options"],
        "title": "SuggestionResponse"
      },
      "TargetScore": {
        "properties": {
          "target_score": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Target Score",
            "default": -1
          },
          "target_range": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Target Range",
            "default": -1
          },
          "within_target": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Within Target",
            "default": false
          }
        },
        "type": "object",
        "title": "TargetScore"
      },
      "TheiaOutput": {
        "properties": {
          "errors": {
            "items": { "$ref": "#/components/schemas/WorkflowError" },
            "type": "array",
            "title": "Errors",
            "default": []
          },
          "final_scores": { "anyOf": [{ "$ref": "#/components/schemas/FinalScores" }, { "type": "null" }] },
          "initial_scores": { "anyOf": [{ "$ref": "#/components/schemas/InitialScores" }, { "type": "null" }] },
          "merged_text": { "type": "string", "title": "Merged Text" },
          "original_text": { "type": "string", "title": "Original Text" },
          "results": {
            "items": { "$ref": "#/components/schemas/HeliosOneWorkflowOutput" },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["merged_text", "original_text", "results"],
        "title": "TheiaOutput"
      },
      "ToneCategory": {
        "type": "string",
        "enum": ["word_choice", "syntax", "punctuation", "discourse_features", "implicit_style", "other"],
        "title": "ToneCategory"
      },
      "ToneChange": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "modified": { "type": "string", "title": "Modified", "description": "The modified text" },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": { "$ref": "#/components/schemas/ToneCategory", "description": "The category of the change" }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "ToneChange"
      },
      "ToneCheckOutput": {
        "properties": {
          "msg_hash": {
            "type": "string",
            "title": "Msg Hash",
            "description": "The hash of the messages used to run the activity",
            "default": ""
          },
          "error": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "prompt": {
            "additionalProperties": true,
            "type": "object",
            "title": "Prompt",
            "description": "The prompt used to run the activity"
          },
          "completion": {
            "additionalProperties": true,
            "type": "object",
            "title": "Completion",
            "description": "The completion used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "repair_log": {
            "items": { "additionalProperties": { "type": "string" }, "type": "object" },
            "type": "array",
            "title": "Repair Log",
            "description": "The LLM output's JSON repair log for the activity"
          },
          "run_id": { "type": "string", "title": "Run Id", "description": "The Temporal workflow run ID" },
          "workflow_id": { "type": "string", "title": "Workflow Id", "description": "The Temporal workflow ID" },
          "text": { "type": "string", "title": "Text", "description": "The original text" },
          "changes": {
            "items": { "$ref": "#/components/schemas/ToneChange" },
            "type": "array",
            "title": "Changes",
            "description": "Suggested changes to the text"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "ToneCheckOutput"
      },
      "Tones": {
        "type": "string",
        "enum": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"],
        "title": "Tones"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "WorkflowError": {
        "properties": { "error": { "type": "string", "title": "Error" } },
        "type": "object",
        "required": ["error"],
        "title": "WorkflowError"
      },
      "WorkflowResponse": {
        "properties": {
          "status": { "$ref": "#/components/schemas/WorkflowStatus" },
          "workflow_id": { "type": "string", "title": "Workflow Id" }
        },
        "type": "object",
        "required": ["status", "workflow_id"],
        "title": "WorkflowResponse"
      },
      "WorkflowStatus": {
        "type": "string",
        "enum": ["running", "completed", "failed", "not_found"],
        "title": "WorkflowStatus"
      },
      "WorkflowStatusResponse": {
        "properties": {
          "workflow_id": { "type": "string", "title": "Workflow Id" },
          "status": { "$ref": "#/components/schemas/WorkflowStatus" },
          "error_message": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Error Message" },
          "result": { "anyOf": [{ "$ref": "#/components/schemas/TheiaOutput" }, { "type": "null" }] }
        },
        "type": "object",
        "required": ["workflow_id", "status"],
        "title": "WorkflowStatusResponse"
      },
      "helios_one__activities__acrolinx_scorer__models__Issue": {
        "properties": {
          "description": { "type": "string", "title": "Description" },
          "originalText": { "type": "string", "title": "Originaltext" },
          "position": { "type": "integer", "title": "Position" },
          "suggestedReplacements": { "items": { "type": "string" }, "type": "array", "title": "Suggestedreplacements" },
          "type": { "type": "string", "title": "Type" }
        },
        "type": "object",
        "required": ["description", "originalText", "position", "suggestedReplacements", "type"],
        "title": "Issue"
      },
      "helios_one__api__schemas__v1__style__checks__Issue": {
        "properties": {
          "original": { "type": "string", "title": "Original", "description": "The original text" },
          "char_index": { "type": "integer", "title": "Char Index", "description": "The start index of the change" },
          "subcategory": {
            "anyOf": [
              { "$ref": "#/components/schemas/GrammarCategory" },
              { "$ref": "#/components/schemas/SimpleVocabCategory" },
              { "$ref": "#/components/schemas/SentenceStructureCategory" },
              { "$ref": "#/components/schemas/SentenceLengthCategory" },
              { "$ref": "#/components/schemas/ToneCategory" },
              { "$ref": "#/components/schemas/StyleGuideCategory" }
            ],
            "title": "Subcategory",
            "description": "The sub-category of the change"
          },
          "category": {
            "anyOf": [{ "$ref": "#/components/schemas/IssueCategory" }, { "type": "null" }],
            "readOnly": true
          }
        },
        "type": "object",
        "required": ["original", "char_index", "subcategory", "category"],
        "title": "Issue"
      }
    },
    "securitySchemes": { "APIKeyHeader": { "type": "apiKey", "in": "header", "name": "Authorization" } }
  },
  "tags": [
    {
      "name": "Internal",
      "description": "Endpoints meant to support Acrolinx products, but not intended for public use. These will be accessible in production, but not publicly documented."
    },
    {
      "name": "Style Guides",
      "description": "Endpoints related to creating, updating, and organizing style guides for content consistency across teams."
    },
    {
      "name": "Style Checks",
      "description": "Analyze your content to spot issues that go against your style guide or brand voice. Use this to catch tone, grammar, or readability problems before publishing."
    },
    {
      "name": "Style Suggestions",
      "description": "Get detailed results from style checks, including flagged issues and suggestions for how to fix them. Perfect for polishing content and staying on-brand."
    },
    {
      "name": "Style Rewrites",
      "description": "Includes all information from style suggestions, plus a rewrite of the text."
    },
    {
      "name": "Demo Tool",
      "description": "Try out style checks and guide features in a sandbox environment. Great for exploring how the API works without affecting real content."
    }
  ]
}
