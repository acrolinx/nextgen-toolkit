{
  "openapi": "3.1.0",
  "info": {
    "title": "Acrolinx NextGen API",
    "description": "API interface for Acrolinx NextGen content processing workflows.",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/rewrites/": {
      "post": {
        "tags": ["Demo Tool", "Demo Tool"],
        "summary": "Submit a document for editing",
        "description": "Uploads a .txt file and starts the Helios One editing workflow.",
        "operationId": "Demo Tool-submit_edit_workflow",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Demo_Tool-submit_edit_workflow"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API Key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/rewrites/{workflow_id}": {
      "get": {
        "tags": ["Demo Tool", "Demo Tool"],
        "summary": "Get the status of an edit workflow",
        "description": "Returns the current status of a Helios One editing workflow.",
        "operationId": "Demo Tool-get_edit_status",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The workflow ID to get the status for.",
              "title": "Workflow Id"
            },
            "description": "The workflow ID to get the status for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API Key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/checks/": {
      "post": {
        "tags": ["Demo Tool"],
        "summary": "Submit a document for checking",
        "description": "Uploads a document (PDF) and starts the Helios One editing workflow.",
        "operationId": "Demo Tool-submit_check_workflow",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Demo_Tool-submit_check_workflow"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Invalid API Key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/style-guides": {
      "get": {
        "tags": ["Style Guides"],
        "summary": "Get Style Guides",
        "operationId": "Style Guides-get_style_guides",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": ["Style Guides"],
        "summary": "Create Style Guide",
        "operationId": "Style Guides-create_style_guide",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/style-guides/{style_guide_id}": {
      "get": {
        "tags": ["Style Guides"],
        "summary": "Get Style Guide",
        "operationId": "Style Guides-get_style_guide",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "style_guide_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Style Guide Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Style Guides"],
        "summary": "Update Style Guide",
        "operationId": "Style Guides-update_style_guide",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "style_guide_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Style Guide Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Style Guides"],
        "summary": "Delete Style Guide",
        "operationId": "Style Guides-delete_style_guide",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "style_guide_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Style Guide Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/style/checks": {
      "post": {
        "tags": ["Style Checks"],
        "summary": "Create Style Check",
        "description": "Start a style and brand check run. Returns a workflow ID for each file.",
        "operationId": "Style Checks-create_style_check",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Style_Checks-create_style_check"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/style/checks/{workflow_id}": {
      "get": {
        "tags": ["Style Checks"],
        "summary": "Get Style Check",
        "description": "get the results of a style and brand check run.",
        "operationId": "Style Checks-get_style_check",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/StyleCheckResponse"
                    },
                    {
                      "$ref": "#/components/schemas/WorkflowStatusResponse"
                    }
                  ],
                  "title": "Response Style Checks-Get Style Check"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/style/suggestions": {
      "post": {
        "tags": ["Style Suggestions"],
        "summary": "Create Style Suggestion",
        "description": "Start a style and brand suggestion run. Returns a workflow ID for each file.",
        "operationId": "Style Suggestions-create_style_suggestion",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Style_Suggestions-create_style_suggestion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/style/suggestions/{workflow_id}": {
      "get": {
        "tags": ["Style Suggestions"],
        "summary": "Get Style Suggestion",
        "description": "Get the results of a suggestion run.",
        "operationId": "Style Suggestions-get_style_suggestion",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SuggestionResponse"
                    },
                    {
                      "$ref": "#/components/schemas/WorkflowStatusResponse"
                    }
                  ],
                  "title": "Response Style Suggestions-Get Style Suggestion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/style-rewrites": {
      "post": {
        "tags": ["Style Rewrites", "Style Rewrites"],
        "summary": "Create Style Rewrite",
        "description": "Start a rewrite run for one or many files. Returns a workflow ID for each file.",
        "operationId": "Style Rewrites-create_style_rewrite",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Style_Rewrites-create_style_rewrite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/v1/style-rewrites/{workflow_id}": {
      "get": {
        "tags": ["Style Rewrites", "Style Rewrites"],
        "summary": "Get Style Rewrite",
        "description": "Get the results of a rewrite run.",
        "operationId": "Style Rewrites-get_style_rewrite",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RewriteResponse"
                    },
                    {
                      "$ref": "#/components/schemas/WorkflowStatusResponse"
                    }
                  ],
                  "title": "Response Style Rewrites-Get Style Rewrite"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AcrolinxScorerActivityOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "issues": {
            "items": {
              "$ref": "#/components/schemas/helios_one__activities__acrolinx_scorer__models__Issue"
            },
            "type": "array",
            "title": "Issues"
          },
          "score": {
            "type": "number",
            "title": "Score",
            "default": -1
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id"],
        "title": "AcrolinxScorerActivityOutput"
      },
      "Analysis": {
        "properties": {
          "avg_sentence_length": {
            "type": "number",
            "title": "Avg Sentence Length",
            "default": -1
          },
          "avg_word_length": {
            "type": "number",
            "title": "Avg Word Length",
            "default": -1
          },
          "complexity_score": {
            "type": "number",
            "title": "Complexity Score",
            "default": -1
          },
          "readability_score": {
            "type": "number",
            "title": "Readability Score",
            "default": -1
          },
          "sentence_count": {
            "type": "integer",
            "title": "Sentence Count",
            "default": -1
          },
          "vocabulary_score": {
            "type": "number",
            "title": "Vocabulary Score",
            "default": -1
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count",
            "default": -1
          }
        },
        "type": "object",
        "title": "Analysis"
      },
      "Body_Demo_Tool-submit_check_workflow": {
        "properties": {
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to check.",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to check.",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          },
          "style_guide": {
            "$ref": "#/components/schemas/StyleGuides",
            "description": "The intended style guide to use for the text to check.",
            "examples": ["ap", "chicago", "microsoft"]
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The .txt file to process.",
            "content_type": "text/plain"
          }
        },
        "type": "object",
        "required": ["dialect", "tone", "style_guide", "file"],
        "title": "Body_Demo Tool-submit_check_workflow"
      },
      "Body_Demo_Tool-submit_edit_workflow": {
        "properties": {
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "The .txt file to process.",
            "content_type": "text/plain"
          },
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to edit.",
            "default": "american_english",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to edit.",
            "default": "formal",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          },
          "style_guide": {
            "$ref": "#/components/schemas/StyleGuides",
            "description": "The intended style guide to use for the text to edit.",
            "default": "microsoft",
            "examples": ["ap", "chicago", "microsoft"]
          },
          "include_classic_score": {
            "type": "boolean",
            "title": "Include Classic Score",
            "description": "Whether to score the text.",
            "default": false,
            "examples": [true, false]
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL to scrape.",
            "default": "",
            "examples": ["https://example.com"]
          }
        },
        "type": "object",
        "title": "Body_Demo Tool-submit_edit_workflow"
      },
      "Body_Style_Checks-create_style_check": {
        "properties": {
          "file_upload": {
            "type": "string",
            "format": "binary",
            "title": "File Upload",
            "description": "The files to check",
            "content_type": "text/plain"
          },
          "style_guide": {
            "$ref": "#/components/schemas/StyleGuides",
            "description": "The intended style guide to use for the text to check.",
            "examples": ["ap", "chicago", "microsoft"]
          },
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to check.",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to check.",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          }
        },
        "type": "object",
        "required": ["file_upload", "style_guide", "dialect", "tone"],
        "title": "Body_Style Checks-create_style_check"
      },
      "Body_Style_Rewrites-create_style_rewrite": {
        "properties": {
          "file_upload": {
            "type": "string",
            "format": "binary",
            "title": "File Upload",
            "description": "The .txt file to process.",
            "content_type": "text/plain"
          },
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to edit.",
            "default": "american_english",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to edit.",
            "default": "formal",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          },
          "style_guide": {
            "$ref": "#/components/schemas/StyleGuides",
            "description": "The intended style guide to use for the text to edit.",
            "default": "microsoft",
            "examples": ["ap", "chicago", "microsoft"]
          }
        },
        "type": "object",
        "required": ["file_upload"],
        "title": "Body_Style Rewrites-create_style_rewrite"
      },
      "Body_Style_Suggestions-create_style_suggestion": {
        "properties": {
          "file_upload": {
            "type": "string",
            "format": "binary",
            "title": "File Upload",
            "description": "The file to get suggestions for",
            "content_type": "text/plain"
          },
          "style_guide": {
            "$ref": "#/components/schemas/StyleGuides",
            "description": "The intended style guide to use for the text to check.",
            "examples": ["ap", "chicago", "microsoft"]
          },
          "dialect": {
            "$ref": "#/components/schemas/Dialects",
            "description": "The intended dialect of the text to check.",
            "examples": [
              "american_english",
              "australian_english",
              "british_oxford",
              "canadian_english",
              "indian_english"
            ]
          },
          "tone": {
            "$ref": "#/components/schemas/Tones",
            "description": "The intended tone of the text to check.",
            "examples": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"]
          }
        },
        "type": "object",
        "required": ["file_upload", "style_guide", "dialect", "tone"],
        "title": "Body_Style Suggestions-create_style_suggestion"
      },
      "ContentQualityFeedback": {
        "type": "string",
        "enum": [
          "Excellent content quality! Your text is clear, readable, and well-structured.",
          "Good content quality. Your text is readable but has room for improvement.",
          "Moderate content quality. Consider revising for better readability.",
          "Low content quality. The text needs significant revision for better readability."
        ],
        "title": "ContentQualityFeedback"
      },
      "ContentScorerActivityOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Analysis"
              },
              {
                "type": "null"
              }
            ]
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContentQualityFeedback"
              },
              {
                "type": "null"
              }
            ]
          },
          "score": {
            "type": "number",
            "title": "Score",
            "default": -1
          },
          "suggestions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContentSuggestions"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggestions"
          },
          "target_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TargetScore"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id"],
        "title": "ContentScorerActivityOutput"
      },
      "ContentSuggestions": {
        "type": "string",
        "enum": [
          "Use shorter sentences and simpler words to improve readability.",
          "Your text may be too complex. Consider simplifying vocabulary and sentence structure.",
          "Your sentences are quite long. Consider breaking them into shorter ones.",
          "Your sentences are very short. Consider combining some for better flow.",
          "Your vocabulary diversity is low. Try using a wider range of words.",
          "Your text is well-balanced. Consider proofreading for minor improvements."
        ],
        "title": "ContentSuggestions"
      },
      "Dialects": {
        "type": "string",
        "enum": ["american_english", "australian_english", "british_oxford", "canadian_english", "indian_english"],
        "title": "Dialects"
      },
      "EditStatusResponse": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TheiaOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": ["workflow_id", "status"],
        "title": "EditStatusResponse"
      },
      "ErrorResponse": {
        "properties": {
          "detail": {
            "type": "string",
            "title": "Detail"
          }
        },
        "type": "object",
        "required": ["detail"],
        "title": "ErrorResponse",
        "description": "Standard error response model."
      },
      "FinalScores": {
        "properties": {
          "acrolinx_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AcrolinxScorerActivityOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "content_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContentScorerActivityOutput"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FinalScores"
      },
      "GrammarActivityOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "changes": {
            "items": {
              "$ref": "#/components/schemas/GrammarChange"
            },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "changes"],
        "title": "GrammarActivityOutput"
      },
      "GrammarCategory": {
        "type": "string",
        "enum": ["sva_pronoun", "punct_cap", "spelling", "syntax", "verbs", "word_usage", "other"],
        "title": "GrammarCategory"
      },
      "GrammarChange": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "modified": {
            "type": "string",
            "title": "Modified",
            "description": "The modified text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "$ref": "#/components/schemas/GrammarCategory"
          }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "GrammarChange"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HeliosOneWorkflowOutput": {
        "properties": {
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "The date and time the workflow was created"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/WorkflowError"
            },
            "type": "array",
            "title": "Errors",
            "description": "The errors that occurred during the workflow"
          },
          "initial_scores": {
            "$ref": "#/components/schemas/InitialScores",
            "description": "The initial scores of the workflow"
          },
          "final_scores": {
            "$ref": "#/components/schemas/FinalScores",
            "description": "The final scores of the workflow"
          },
          "input_file": {
            "type": "string",
            "title": "Input File",
            "description": "The path to the input file"
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the workflow"
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "grammar_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GrammarActivityOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the grammar activity"
          },
          "merging_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MergingActivityOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the merging activity"
          },
          "parser_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParserResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the parser activity"
          },
          "sentence_length_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SentenceLengthActivityOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the sentence length activity"
          },
          "sentence_structure_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SentenceStructureOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the sentence structure activity"
          },
          "simple_vocabulary_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SimpleVocabOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the simple vocabulary activity"
          },
          "tone_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToneCheckOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the tone activity"
          },
          "style_guide_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StyleGuideOutput"
              },
              {
                "type": "null"
              }
            ],
            "description": "The result of the style guide activity"
          }
        },
        "type": "object",
        "required": ["created_at", "input_file", "run_id", "workflow_id"],
        "title": "HeliosOneWorkflowOutput"
      },
      "InitialScores": {
        "properties": {
          "acrolinx_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AcrolinxScorerActivityOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "content_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContentScorerActivityOutput"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "InitialScores"
      },
      "MergingActivityOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "merged_text": {
            "type": "string",
            "minLength": 1,
            "title": "Merged Text",
            "description": "Text after applying all changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "merged_text"],
        "title": "MergingActivityOutput"
      },
      "Parameters": {
        "properties": {
          "dialect": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Dialects"
              },
              {
                "type": "null"
              }
            ],
            "description": "The dialect used for the activity"
          },
          "tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Tones"
              },
              {
                "type": "null"
              }
            ],
            "description": "The tone used for the activity"
          },
          "style_guide": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StyleGuides"
              },
              {
                "type": "null"
              }
            ],
            "description": "The style guide used for the activity"
          },
          "max_words": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Words",
            "description": "The maximum number of words allowed for the activity"
          }
        },
        "type": "object",
        "title": "Parameters"
      },
      "ParserResponse": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "extracted_text": {
            "type": "string",
            "minLength": 1,
            "title": "Extracted Text",
            "description": "The extracted text from the file."
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "extracted_text"],
        "title": "ParserResponse"
      },
      "RewriteResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "style_guide_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StyleGuides"
              },
              {
                "type": "null"
              }
            ]
          },
          "scores": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Analysis"
              },
              {
                "type": "null"
              }
            ]
          },
          "issues": {
            "items": {
              "$ref": "#/components/schemas/Suggestion"
            },
            "type": "array",
            "title": "Issues"
          },
          "rewrite": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewrite"
          }
        },
        "type": "object",
        "required": ["status", "style_guide_id", "scores", "issues"],
        "title": "RewriteResponse"
      },
      "SentenceLengthActivityOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "changes": {
            "items": {
              "$ref": "#/components/schemas/SentenceLengthChange"
            },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "SentenceLengthActivityOutput"
      },
      "SentenceLengthCategory": {
        "type": "string",
        "enum": ["capitalization", "remove", "extract", "shorten", "deletion", "replace", "other"],
        "title": "SentenceLengthCategory"
      },
      "SentenceLengthChange": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "modified": {
            "type": "string",
            "title": "Modified",
            "description": "The modified text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "$ref": "#/components/schemas/SentenceLengthCategory"
          }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "SentenceLengthChange"
      },
      "SentenceStructureCategory": {
        "type": "string",
        "enum": [
          "complex_verbs",
          "hidden_verbs",
          "insertion",
          "modal_verbs",
          "passive",
          "phrasal_verbs",
          "subjunctive",
          "other"
        ],
        "title": "SentenceStructureCategory"
      },
      "SentenceStructureChange": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "modified": {
            "type": "string",
            "title": "Modified",
            "description": "The modified text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "$ref": "#/components/schemas/SentenceStructureCategory"
          }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "SentenceStructureChange"
      },
      "SentenceStructureOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "changes": {
            "items": {
              "$ref": "#/components/schemas/SentenceStructureChange"
            },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "SentenceStructureOutput"
      },
      "SimpleVocabCategory": {
        "type": "string",
        "enum": ["vocabulary", "other"],
        "title": "SimpleVocabCategory"
      },
      "SimpleVocabChange": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "modified": {
            "type": "string",
            "title": "Modified",
            "description": "The modified text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "$ref": "#/components/schemas/SimpleVocabCategory"
          }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "SimpleVocabChange"
      },
      "SimpleVocabOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "changes": {
            "items": {
              "$ref": "#/components/schemas/SimpleVocabChange"
            },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "SimpleVocabOutput"
      },
      "StartCheckResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Check workflow started successfully."
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "examples": ["helios-workflow-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"]
          }
        },
        "type": "object",
        "required": ["workflow_id"],
        "title": "StartCheckResponse",
        "description": "Response after successfully starting a check workflow."
      },
      "StartEditResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Rewrite workflow started successfully."
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "examples": ["helios-workflow-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"]
          }
        },
        "type": "object",
        "required": ["workflow_id"],
        "title": "StartEditResponse",
        "description": "Response after successfully starting a rewrite workflow."
      },
      "StyleCheckResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "style_guide_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StyleGuides"
              },
              {
                "type": "null"
              }
            ]
          },
          "scores": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Analysis"
              },
              {
                "type": "null"
              }
            ]
          },
          "issues": {
            "items": {
              "$ref": "#/components/schemas/helios_one__api__schemas__v1__style__checks__Issue"
            },
            "type": "array",
            "title": "Issues"
          }
        },
        "type": "object",
        "required": ["status", "style_guide_id", "scores", "issues"],
        "title": "StyleCheckResponse"
      },
      "StyleGuideCategory": {
        "type": "string",
        "enum": [
          "punctuation",
          "capitalization",
          "grammar_and_usage",
          "numbers_and_dates",
          "formatting_and_structure",
          "other"
        ],
        "title": "StyleGuideCategory"
      },
      "StyleGuideChange": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "modified": {
            "type": "string",
            "title": "Modified",
            "description": "The modified text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "$ref": "#/components/schemas/StyleGuideCategory"
          }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "StyleGuideChange"
      },
      "StyleGuideOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "changes": {
            "items": {
              "$ref": "#/components/schemas/StyleGuideChange"
            },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "changes"],
        "title": "StyleGuideOutput"
      },
      "StyleGuides": {
        "type": "string",
        "enum": ["ap", "chicago", "microsoft"],
        "title": "StyleGuides"
      },
      "Suggestion": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GrammarCategory"
              },
              {
                "$ref": "#/components/schemas/SimpleVocabCategory"
              },
              {
                "$ref": "#/components/schemas/SentenceStructureCategory"
              },
              {
                "$ref": "#/components/schemas/SentenceLengthCategory"
              },
              {
                "$ref": "#/components/schemas/ToneCategory"
              },
              {
                "$ref": "#/components/schemas/StyleGuideCategory"
              }
            ],
            "title": "Category",
            "description": "The category of the change"
          },
          "suggestion": {
            "type": "string",
            "title": "Suggestion"
          }
        },
        "type": "object",
        "required": ["original", "change_start_char_idx", "category", "suggestion"],
        "title": "Suggestion"
      },
      "SuggestionResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "style_guide_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StyleGuides"
              },
              {
                "type": "null"
              }
            ]
          },
          "scores": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Analysis"
              },
              {
                "type": "null"
              }
            ]
          },
          "issues": {
            "items": {
              "$ref": "#/components/schemas/Suggestion"
            },
            "type": "array",
            "title": "Issues"
          }
        },
        "type": "object",
        "required": ["status", "style_guide_id", "scores", "issues"],
        "title": "SuggestionResponse"
      },
      "TargetScore": {
        "properties": {
          "target_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Score",
            "default": -1
          },
          "target_range": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Range",
            "default": -1
          },
          "within_target": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Within Target",
            "default": false
          }
        },
        "type": "object",
        "title": "TargetScore"
      },
      "TheiaOutput": {
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/WorkflowError"
            },
            "type": "array",
            "title": "Errors",
            "default": []
          },
          "final_scores": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FinalScores"
              },
              {
                "type": "null"
              }
            ]
          },
          "initial_scores": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InitialScores"
              },
              {
                "type": "null"
              }
            ]
          },
          "merged_text": {
            "type": "string",
            "title": "Merged Text"
          },
          "original_text": {
            "type": "string",
            "title": "Original Text"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/HeliosOneWorkflowOutput"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["merged_text", "original_text", "results"],
        "title": "TheiaOutput"
      },
      "TokenUsage": {
        "properties": {
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "description": "The number of completion tokens used",
            "default": -1
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "description": "The number of prompt tokens used",
            "default": -1
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "description": "The total number of tokens used",
            "default": -1
          }
        },
        "type": "object",
        "title": "TokenUsage"
      },
      "ToneCategory": {
        "type": "string",
        "enum": ["word_choice", "syntax", "punctuation", "discourse_features", "implicit_style", "other"],
        "title": "ToneCategory"
      },
      "ToneChange": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "modified": {
            "type": "string",
            "title": "Modified",
            "description": "The modified text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "$ref": "#/components/schemas/ToneCategory",
            "description": "The category of the change"
          }
        },
        "type": "object",
        "required": ["original", "modified", "change_start_char_idx", "category"],
        "title": "ToneChange"
      },
      "ToneCheckOutput": {
        "properties": {
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "The error that occurred during the activity"
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the activity in seconds"
          },
          "model": {
            "type": "string",
            "title": "Model",
            "description": "The model used to run the activity",
            "default": ""
          },
          "parameters": {
            "$ref": "#/components/schemas/Parameters",
            "description": "The parameters used to run the activity"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "The provider used to run the activity",
            "default": ""
          },
          "run_id": {
            "type": "string",
            "title": "Run Id",
            "description": "The Temporal workflow run ID"
          },
          "token_usage": {
            "$ref": "#/components/schemas/TokenUsage",
            "description": "The token usage for the activity"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id",
            "description": "The Temporal workflow ID"
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The original text"
          },
          "changes": {
            "items": {
              "$ref": "#/components/schemas/ToneChange"
            },
            "type": "array",
            "title": "Changes",
            "description": "Suggested changes to the text"
          }
        },
        "type": "object",
        "required": ["duration", "run_id", "workflow_id", "text", "changes"],
        "title": "ToneCheckOutput"
      },
      "Tones": {
        "type": "string",
        "enum": ["academic", "business", "casual", "conversational", "formal", "gen-z", "informal", "technical"],
        "title": "Tones"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "WorkflowError": {
        "properties": {
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": ["error"],
        "title": "WorkflowError"
      },
      "WorkflowResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          }
        },
        "type": "object",
        "required": ["status", "workflow_id"],
        "title": "WorkflowResponse"
      },
      "WorkflowStatus": {
        "type": "string",
        "enum": ["running", "completed", "failed", "not_found"],
        "title": "WorkflowStatus"
      },
      "WorkflowStatusResponse": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TheiaOutput"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["workflow_id", "status"],
        "title": "WorkflowStatusResponse"
      },
      "helios_one__activities__acrolinx_scorer__models__Issue": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "originalText": {
            "type": "string",
            "title": "Originaltext"
          },
          "position": {
            "type": "integer",
            "title": "Position"
          },
          "suggestedReplacements": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Suggestedreplacements"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["description", "originalText", "position", "suggestedReplacements", "type"],
        "title": "Issue"
      },
      "helios_one__api__schemas__v1__style__checks__Issue": {
        "properties": {
          "original": {
            "type": "string",
            "title": "Original",
            "description": "The original text"
          },
          "change_start_char_idx": {
            "type": "integer",
            "title": "Change Start Char Idx",
            "description": "The start index of the change"
          },
          "category": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GrammarCategory"
              },
              {
                "$ref": "#/components/schemas/SimpleVocabCategory"
              },
              {
                "$ref": "#/components/schemas/SentenceStructureCategory"
              },
              {
                "$ref": "#/components/schemas/SentenceLengthCategory"
              },
              {
                "$ref": "#/components/schemas/ToneCategory"
              },
              {
                "$ref": "#/components/schemas/StyleGuideCategory"
              }
            ],
            "title": "Category",
            "description": "The category of the change"
          }
        },
        "type": "object",
        "required": ["original", "change_start_char_idx", "category"],
        "title": "Issue"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "tags": [
    {
      "name": "Style Guides",
      "description": "Endpoints related to creating, updating, and organizing style guides for content consistency across teams."
    },
    {
      "name": "Style Checks",
      "description": "Analyze your content to spot issues that go against your style guide or brand voice. Use this to catch tone, grammar, or readability problems before publishing."
    },
    {
      "name": "Style Suggestions",
      "description": "Get detailed results from style checks, including flagged issues and suggestions for how to fix them. Perfect for polishing content and staying on-brand."
    },
    {
      "name": "Style Rewrites",
      "description": "Includes all information from style suggestions, plus a rewrite of the text."
    },
    {
      "name": "Demo Tool",
      "description": "Try out style checks and guide features in a sandbox environment. Great for exploring how the API works without affecting real content."
    }
  ]
}
